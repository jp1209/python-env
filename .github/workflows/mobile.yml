name: Mobile App Automation Test

on: [push]

jobs:
  android-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'  # Especifica la versión exacta de Java 11 si es necesario
        distribution: 'adopt'

    - name: Set up Python 3.12.1
      uses: actions/setup-python@v2
      with:
        python-version: '3.12.1'

    - name: Install Android SDK
      run: |
          wget https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip
          unzip commandlinetools-linux-7583922_latest.zip -d android-sdk
          echo "ANDROID_SDK_ROOT=$GITHUB_WORKSPACE/android-sdk" >> $GITHUB_ENV
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools/latest
          mv $ANDROID_SDK_ROOT/cmdline-tools/* $ANDROID_SDK_ROOT/cmdline-tools/latest/
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses
          $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-29" "build-tools;29.0.3" "emulator" "system-images;android-29;default;x86"
      

    - name: Create and start Android emulator
      run: |
        echo "no" | cmdline-tools/bin/avdmanager create avd -n testEmulator -k "system-images;android-29;default;x86" --force
        $ANDROID_SDK_ROOT/emulator/emulator -avd testEmulator -no-audio -no-window -gpu swiftshader_indirect &
        $ANDROID_SDK_ROOT/platform-tools/adb wait-for-device

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install Appium-Python-Client
        pip install pytest pytest-xdist  # Instala pytest y pytest-xdist para la ejecución paralela
      # Agrega cualquier otra dependencia que tu proyecto requiera
                
    - name: Change to parallel directory
      run: cd parallel
    - name: Run tests in parallel directory
      run: pytest -n 2
